[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-09-16 17:17:16.412744",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t    if(frm.doc.warranty_created == 0){\n    \t    if(frm.doc.docstatus == 1){\n    \t        $.each(frm.doc.items, function(index, row){\n        \t        frappe.model.with_doc(\"Item\", row.item_code, function() {\n                        var item= frappe.model.get_doc(\"Item\", row.item_code)\n                        if(item.warranty_status == \"Enabled\"){\n                                frm.add_custom_button(__(\"Create Warranty\"), function(){\n                                frappe.call({\n                                    method: 'maintenance_system.customization.sales_invoice.create_maintenance_item',\n                                        args: {\n                                            'invoice':frm.doc.name,\n                                        },\n                                        callback: function(r) {\n                                            if (!r.exc) {\n                                                frappe.msgprint(r.message);\n                                            }\n                                        }\n                                    });\n                                }, __(\"Create\"));\n                                return false;\n                        }\n                    });\n                });\n    \t    }\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2022-02-16 13:17:26.477860",
  "name": "Delivery Note-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh(frm) {\n        frm.fields_dict.items.grid.toggle_enable(\"qty\",!frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.toggle_display(\"checking_qty\",frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.set_column_disp(\"checking_qty\",frm.doc.barcode_validation);\n\t},\n\tonload(frm) {\n        frm.fields_dict.items.grid.toggle_enable(\"qty\",!frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.toggle_display(\"checking_qty\",frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.set_column_disp(\"checking_qty\",frm.doc.barcode_validation);\n\t},\n\tscan_barcode: function(frm){\n\t    let scan_barcode_field = frm.fields_dict[\"scan_barcode\"];\n\n\t\tlet show_description = function(idx, exist = null) {\n\t\t\tif (exist) {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Qty increased by 1', [idx]));\n\t\t\t} else {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Item added', [idx]));\n\t\t\t}\n\t\t};\n\n\t\tif(frm.doc.scan_barcode) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.selling.page.point_of_sale.point_of_sale.search_serial_or_batch_or_barcode_number\",\n\t\t\t\targs: { search_value: frm.doc.scan_barcode }\n\t\t\t}).then(r => {\n\t\t\t\tconst data = r && r.message;\n\t\t\t\tif (!data || Object.keys(data).length === 0) {\n\t\t\t\t\tscan_barcode_field.set_new_description(__('Cannot find Item with this barcode'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet cur_grid = frm.fields_dict.items.grid;\n\n\t\t\t\tlet row_to_modify = null;\n\t\t\t\tconst existing_item_row = frm.doc.items.find(d => d.item_code === data.item_code);\n\t\t\t\tconst blank_item_row = frm.doc.items.find(d => !d.item_code);\n\n\t\t\t\tif (existing_item_row) {\n\t\t\t\t\trow_to_modify = existing_item_row;\n\t\t\t\t} else if (blank_item_row) {\n\t\t\t\t\trow_to_modify = blank_item_row;\n\t\t\t\t}\n\t\t\t\tif (!row_to_modify) {\n\t\t\t\t\t// add new row\n\t\t\t\t\trow_to_modify = frappe.model.add_child(frm.doc, cur_grid.doctype, 'items');\n\t\t\t\t\tfrappe.msgprint({\n                    title: __('Alert'),\n                    indicator: 'orange',\n                    message: __('New Item is added')\n                    });\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t    if(data[\"batch_no\"]&& frappe.meta.has_field(row_to_modify.doctype, \"batch_no\")){\n\t\t\t\t        if(frm.doc.items.find(d => d.item_code === data.item_code))\n\t\t\t\t        {\n\t\t\t\t            if(!frm.doc.items.find(d => d.batch_no === data.batch_no)){\n    \t\t\t\t            row_to_modify = frappe.model.add_child(frm.doc, cur_grid.doctype, 'items');\n    \t\t\t\t        }\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t}\n\n\t\t\t\tshow_description(row_to_modify.idx, row_to_modify.item_code);\n\n\t\t\t\tfrm.from_barcode = true;\n\t\t\t\tfrappe.model.set_value(row_to_modify.doctype, row_to_modify.name, {\n\t\t\t\t\titem_code: data.item_code,\n\t\t\t\t\tchecking_qty: (frm.doc.barcode_validation)?(row_to_modify.checking_qty || 0) + 1 : row_to_modify.checking_qty,\n\t\t\t\t\tqty: (!frm.doc.barcode_validation)?(row_to_modify.qty || 0) + 1 : row_to_modify.qty\n\t\t\t\t});\n\n\t\t\t\t['serial_no', 'batch_no', 'barcode'].forEach(field => {\n\t\t\t\t\tif (data[field] && frappe.meta.has_field(row_to_modify.doctype, field)) {\n\n\t\t\t\t\t\tlet value = (row_to_modify[field] && field === \"serial_no\")\n\t\t\t\t\t\t\t? row_to_modify[field] + '\\n' + data[field] : data[field];\n\n\t\t\t\t\t\tfrappe.model.set_value(row_to_modify.doctype,\n\t\t\t\t\t\t\trow_to_modify.name, field, value);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tscan_barcode_field.set_value('');\n\t\t\t\trefresh_field(\"items\");\n\t\t\t});\n\t\t}\n\t},\n\tbarcode_validation: function(frm)\n\t{\n        frm.fields_dict.items.grid.toggle_enable(\"qty\",!frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.toggle_display(\"checking_qty\",frm.doc.barcode_validation);\n        frm.fields_dict.items.grid.set_column_disp(\"checking_qty\",frm.doc.barcode_validation);\n\t},\n\tbefore_submit: function(frm,cdt,cdn){\n\t\tconst item = locals[cdt][cdn];\n\t\tif(frm.doc.barcode_validation)\n\t\t{\n\t\t    frm.doc.items.forEach(function(d)\n            {\n    \t\t    if(d.qty !== d.checking_qty) \n    \t\t    {\n    \t\t        frappe.validated = false;\n                    frappe.msgprint({\n                    title: __('Warning'),\n                    indicator: 'red',\n                    message: __('Checking Qty and Required Qty of Items row {0} does not matched.',[d.idx])\n                    });\n    \t\t    }\n            });\n\t\t}\n\t},\n\tbefore_save(frm)\n\t{\n\t\tif(!frm.doc.barcode_validation)\n\t\t{\n    \t\tfrm.doc.items.forEach(function(d)\n                {\n                    frappe.model.set_value(d.doctype,d.name,'checking_qty',0);\n                }\n            );\n\t\t}\n\t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2022-09-11 18:14:26.349364",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "let check_without_item_group,item_code_eries;\n\nfrappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t     frm.toggle_reqd('item_code', 0);\n\t    \n\t    refresh_field(\"items\");\n\t    frm.set_df_property(\"item_code\",\"reqd\",0);\n\t    if (frm.doc.create_a_barcode_automatically === 1){\n\t         frm.add_custom_button(__(\"Generate Barcode\"), function() {\n                frappe.call('techstation_item_control.overrides.item_validate.generate_barcode', {\n                        item: frm.doc.item_code\n                    }).then(r => {\n                        // frappe.msgprint(r.message);\n                        frappe.model.with_doc(\"Barcode Configuration\", frm.doc.item_code, function() {\n                            var barcode_configuration= frappe.model.get_doc(\"Barcode Configuration\")\n                            console.log(barcode_configuration.allow_adding_more_than_one_barcode_inside_the_item)\n                            if(barcode_configuration.allow_adding_more_than_one_barcode_inside_the_item == 0 && frm.doc.barcodes.length == 1){\n                                frappe.throw(\"Please Activate Allow Adding Multiple Barcode In Item in Barcode Configuration\")\n                                console.log(barcode_configuration.allow_adding_more_than_one_barcode_inside_the_item)\n                            }else{\n                                var child = cur_frm.add_child(\"barcodes\");\n                                frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message);\n                                frappe.model.set_value(child.doctype, child.name, \"barcode_type\",\"\");\n                                frm.save();\n                                refresh_field(\"barcodes\");\n                            }\n                        });\n                        \n                    });\n        });\n        \n        \n        frm.add_custom_button(__(\"Barcode Printing\"), function() {\n            let printing_template = frm.doc.print_format;\n            if(printing_template){\n                  window.open(window.location.origin+\"/printview?doctype=Item&name=\"+frm.doc.item_code+\"&trigger_print=1&format=\"+encodeURIComponent(printing_template.trim())+\"&no_letterhead=1&letterhead=No%20Letterhead&settings=%7B%7D&_lang=en\");\n            }else{\n                  frappe.throw(\"Please Select An Default print Template\");\n            }\n        });\n        \n        \n\t    }\n\t   frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Item Code Configuration',\n                fieldname: [\"generate_item_code_without_selecting_item_group\",\"item_code_series\"]\n            },\n            callback: result => {\n                check_without_item_group=result.message.generate_item_code_without_selecting_item_group;\n                item_code_eries=result.message.item_code_series;\n                console.log(result);\n            }\n        });\n       \n\t},before_save(frm){\n\t   if(frm.is_new()){\n\t       frm.set_df_property(\"item_code\",\"reqd\",0);\n\t       if(frm.doc.item_group != \"\"){\n\t           console.log(check_without_item_group);\n        \t    if(check_without_item_group == 1){\n        \t        if (item_code_eries != \"\"){\n        \t            frappe.call('techstation_item_control.overrides.item_validate.generate_item_code', {\n                                series:item_code_eries\n                            }).then(r => {\n                                \n                                frm.set_value(\"item_code\",r.message);\n                                // frappe.msgprint(r.message);\n                            });\n        \t            \n        \t        }else{\n        \t            frappe.throw(\"Please Select An Item Barcode Series in Item Barcode Configuration\");\n        \t        }\n\t       }else{\n\t        frm.set_df_property(\"item_code\",\"reqd\",0);\n\t        if (frm.doc.item_group != \"\"){\n\t            frm.set_df_property(\"item_code\",\"reqd\",0);\n\t             frappe.call({\n                    method: 'frappe.client.get_value',\n                    args: {\n                        doctype: 'Item Group',\n                        filters: { 'name': frm.doc.item_group},\n                        fieldname: [\"automatically_create_a_item_code_when_adding_a_new_item\",\"item_code_series\"]\n                    },\n                    callback: result => {\n                        console.log(result);\n                        if(result.message.automatically_create_a_item_code_when_adding_a_new_item == 1){\n                            frm.set_value(\"automatically_create_item_code\",1)\n                            if(result.message.item_code_series != \"\"){\n                                console.log(result.message.item_code_series)\n                                frappe.call('techstation_item_control.overrides.item_validate.generate_item_code', {\n                                        series:result.message.item_code_series\n                                    }).then(r => {\n                                        \n                                        frm.set_value(\"item_code\",r.message);\n                                        console.log(r)\n                                    });\n                            }else{\n                                frappe.throw(\"Please Select An Item Code Series in Item group to Generate Item Code\")\n                            }\n                            \n                        }else{\n                            frappe.throw(\"Please Select Automatically Create A Item Code When Adding A New Item in Item Group For item Code Configuration\");\n                        }\n                        \n                    }\n                });\n\t        }else{\n\t            frappe.throw(\"Please Select An Item Group For item Code Generation\");\n\t        }\n\t       }\n    \t    \n\t        \n\t    }\n\t    \n\t   }\n\t   \n\t   \n\t   \n\t   \n\t},item_group(frm){\n\t    frm.toggle_reqd('item_code', 0);\n\t}\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-08-24 16:41:54.332156",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\trefresh(frm) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Selling Settings',\n                    fields:[\"not_allowed_to_change_the_selling_rate_inside_the_invoice\"]\n                },\n                callback: e => {\n                    // console.log(e.message.not_allowed_to_change_the_selling_rate_inside_the_invoice);\n                    if(e.message.not_allowed_to_change_the_selling_rate_inside_the_invoice == 1){\n                        $.each(frm.doc.items, function(idx, d){\n            \t\t\t        frappe.meta.get_docfield(d.doctype,\"rate\", d.name).read_only = 1;\n                        });\n                    }\n                }\n        \t});\t\t\t        \n\t\t\n\t}\n})\n\n// frappe.ui.form.on('Sales Order Item', {\n// \trefresh(frm) {\n// \t\t$.each(frm.doc.items, function(idx, d){\n//             frappe.call({\n//             method: 'frappe.client.get',\n//             args: {\n//                 doctype: d.doctype,\n//                 fields: [\"maintain_stock\"],\n//                 filters: [\n//                     ['name', \"=\", d.item_code]\n\n//                 ]\n//             },\n//             callback: result => {\n//                 default_freight_charges = result.message[0].default_freight_and_forwarding_charges\n//                 default_packing_unit = result.message[0].default_packing_account\n//             }\n//         });\n//         });\n// \t}\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2022-08-27 11:02:58.709217",
  "name": "Purchase Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Profit Margin\"), function(){\n         frm.trigger(\"profit_margin\");\n        }, __(\"Create\"));\n\n\t},\n\tprofit_margin(frm) {\n                frappe.model.open_mapped_doc({\n                        method: \"techstation_item_control.overrides.purchase_invoice.map_purchase_invoice\",\n                        frm: cur_frm\n                })\n                \n    },\n    apply_mandatory_discount(frm){\n        if(frm.doc.apply_mandatory_discount == 1){\n            if(frm.doc.items.length >= 1){\n                $.each(frm.doc.items, function(i, d) {\n                    \n                    frappe.model.with_doc(\"Item\", d.item_code, function(r) {\n        \t\t\t    var item_details = frappe.model.get_doc(\"Item\", d.item_code);\n        \t\t\t    \n                        // d.discount_percentage=10;\n                        console.log(d.name);\n                        frappe.db.set_value(\"Purchase Invoice Item\",d.name,{\"discount_amount\":100})\n                        // d.discount_amount=d.price_list_rate*10/100;\n\n                    });\n                 });\n            }\n        }else if(frm.doc.apply_mandatory_discount == 0){\n            if(frm.doc.items.length >= 1){\n                $.each(frm.doc.items, function(i, d) {\n                    \n                    frappe.model.with_doc(\"Item\", d.item_code, function(r) {\n        \t\t\t    var item_details = frappe.model.get_doc(\"Item\", d.item_code);\n        \t\t\t    frm.doc.items.filter(item => {\n                            if(item.item_code === d.item_code){\n                                // item.discount_percentage=0;\n                                // frappe.db.set_value(\"Purchase Invoice Item\",item.name,{\"discount_amount\":0,\"discount_percentage\":0})\n                                item.discount_amount=0;\n                            }\n                        })\n                    });\n                 });\n            }\n        }\n        refresh_field(\"items\");\n    }\n});\n\n\n\n\nfrappe.ui.form.on('Purchase Invoice Item', \"discount_percentage\", function(frm, cdt, cdn) {\nvar item = locals[cdt][cdn];\nconsole.log(\"Hello\");\nfrappe.model.set_value(cdt, cdn, \"discount_amount\", 0);\n\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2022-08-26 23:33:23.060621",
  "name": "Purchase Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Profit Margin\"), function(){\n         frm.trigger(\"profit_margin\");\n        }, __(\"Create\"));\n\n\t},\n\tprofit_margin(frm) {\n                frappe.model.open_mapped_doc({\n                        method: \"techstation_item_control.overrides.purchase_order.map_purchase_order\",\n                        frm: cur_frm\n                })\n                \n    },\n    apply_mandatory_discount(frm){\n        if(frm.doc.apply_mandatory_discount == 1){\n            if(frm.doc.items.length >= 1){\n                $.each(frm.doc.items, function(i, d) {\n                    \n                    frappe.model.with_doc(\"Item\", d.item_code, function(r) {\n        \t\t\t    var item_details = frappe.model.get_doc(\"Item\", d.item_code);\n        \t\t\t    frm.doc.items.filter(item => {\n                            if(item.item_code === d.item_code){\n                                item.discount_percentage=item_details.max_discount;\n                                frappe.msgprint(item.discount_amount)\n                            }\n                        })\n                    });\n                 });\n            }\n        }\n    }\n        \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Barcode Printing",
  "enabled": 1,
  "modified": "2022-09-10 17:44:36.486308",
  "name": "Barcode Printing-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Barcode Printing', {\n    \n    // \"validate\": function(frm,cdt,cdn){\t\n     \t\n    refresh(frm){\n        if(frm.doc.items.length >=1){\n            // frm.set_df_property(\"items\",\"hidden\",1);\n            console.log(frm.doc.items);\n            var count=0;\n            for (var i=0;i<frm.doc.items.length;i++){\n                if(frm.doc.items[i].print_default == 1){\n                    count= count+1;\n                    if (count >= 1){\n                        frm.doc.items[i].print_default = 0;\n                    }\n                }\n            }\n            frm.save();\n           \n        }\n        frm.save();\n    },\n    onload: function (frm) {\n        frm.trigger(\"setup_queries\");\n    },\n    setup_queries:function (frm) {\n        console.log(\"im setup queries!\");\n        frm.set_query(\"printing_template\", \"items\", function (frm, cdt, cdn) {\n            return {\n                filters: {\n                   doc_type:\"Barcode Printing\"\n                }\n            };\n        });\n    },\n    get_update(frm){\n        \n        frappe.call('techstation_item_control.overrides.barcode_print.get_updates', {\n                        name: frm.doc.name\n                    }).then(r => {\n                        console.log(r.message);\n                        frm.doc.items=[];\n                        for(let i=0;i<r.message.length;i++){\n                            var child = cur_frm.add_child(\"items\");\n                            frappe.model.set_value(child.doctype, child.name, \"item_code\",r.message[i][\"item_code\"]);\n                            frappe.model.set_value(child.doctype, child.name, \"item_name\",r.message[i][\"item_name\"]);\n                            frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message[i][\"barcode\"]);\n                            frappe.model.set_value(child.doctype, child.name, \"item_group\",r.message[i][\"item_group\"]);\n                            frappe.model.set_value(child.doctype, child.name, \"qty\",r.message[i][\"qty\"]);\n                            frappe.model.set_value(child.doctype, child.name, \"printing_template\",r.message[i][\"default_print\"]);\n                            frm.save();\n                            refresh_field(\"items\");\n                            \n                        }\n                        \n                        frappe.msgprint(\"Item table Successfully Updated\");\n                        \n                    });\n        \n    }\n   \n});\n\n\n\n\nfrappe.ui.form.on('Barcode Generator Items', \"print_barcode\", function(frm, doctype, name) {\n  let row = locals[doctype][name];\n  \n  let printing_template = row.printing_template;\n  if(printing_template != \"Barcode Printing\"){\n    //   document.getElementById(\"btn-print\").onclick = function() {  \n        window.open(window.location.origin+\"/printview?doctype=Item&name=\"+row.item_code+\"&trigger_print=1&format=\"+encodeURIComponent(printing_template.trim())+\"&no_letterhead=1&letterhead=No%20Letterhead&settings=%7B%7D&_lang=en\");\n    //   };\n      \n      \n  }else if(printing_template == \"Barcode Printing\"){\n      window.open(window.location.origin+\"/printview?doctype=Barcode%20Printing&name=\"+frm.doc.name+\"&trigger_print=1&format=\"+encodeURIComponent(printing_template.trim())+\"&no_letterhead=1&letterhead=No%20Letterhead&settings=%7B%7D&_lang=en\");\n      \n  }else{\n      frappe.throw(\"Please Select a Printing template\");\n      \n  }\n\n});\n\n\n\n\n\n\n\nfrappe.ui.form.on('Barcode Generator Items', {\n\tprint_default(frm,cdt,cdn) {\n\t    let row = locals[cdt][cdn];\n\t    if(row.print_default == 1){\n\t        row.printing_template = \"Barcode Printing\";\n\t        frm.save()\n\t    }\n\t\t\n\t},\n\tprinting_template(frm,cdt,cdn){\n\t    let row = locals[cdt][cdn];\n\t    frm.save();\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Price Update",
  "enabled": 1,
  "modified": "2022-08-19 06:59:19.189550",
  "name": "Price Update-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Price Update', {\n\tselling(frm) {\n\t\tif(frm.doc.selling ===1){\n\t\t    frm.set_value(\"buying\",0);\n\t\t    refresh_field(\"buying\");\n\t\t    frm.set_query(\"price_list\", function() {\n                return {\n                    \"filters\": {\n                        \"selling\": 1,\n                    }\n                };\n            });\n\t\t}\n\t},\n\tbuying(frm){\n\t    if(frm.doc.buying ===1){\n\t\t    frm.set_value(\"selling\",0);\n\t\t    refresh_field(\"selling\");\n\t\t    frm.set_query(\"price_list\", function() {\n                return {\n                    \"filters\": {\n                        \"buying\": 1,\n                    }\n                };\n            });\n\t\t}\n\t},\n\t\n\tprice_increase(frm){\n\t    if(frm.doc.price_increase ===1){\n\t\t    frm.set_value(\"price_reduction\",0);\n\t\t}\n\t},\n\tprice_reduction(frm){\n\t    if(frm.doc.price_reduction ===1){\n\t\t    frm.set_value(\"price_increase\",0);\n\t\t}\n\t},\n\tupdate_all_items(frm){\n\t     if(frm.doc.update_all_items ===1){\n\t\t    frm.set_value(\"item_group\",\"\");\n\t\t    frm.set_df_property(\"item_group\",\"reqd\",0);\n\t\t}\n\t},\n\tupdate_all_price_lists(frm){\n\t     if(frm.doc.update_all_price_lists ===1){\n\t\t    frm.set_value(\"price_list\",\"\");\n\t\t}\n\t},before_save(frm){\n\t    if(frm.doc.selling ==0 && frm.doc.buying == 0){\n\t        frappe.throw(\"Please Select one of them Buying or Selling\");\n\t    }\n\t    if(frm.doc.price_increase ==0 && frm.doc.price_reduction == 0){\n\t        frappe.throw(\"Please Select one of them Price Increase or Price Reduction\");\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Barcode Management",
  "enabled": 1,
  "modified": "2022-08-20 07:15:43.377267",
  "name": "Barcode Management-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Barcode Management', {\n\titem_group(frm) {\n\t    \n\t    if(frm.doc.type === \"Generate Barcode\"){\n\t        if(frm.doc.item_group != \"\"){\n            \t        frappe.call('techstation_item_control.overrides.barcode_management.get_item', {\n                                            data: frm.doc\n                                        }).then(r => {\n                                console.log(r.message);\n                                frm.doc.table_5=[];\n                                for(let i=0;i<r.message.length;i++){\n                                    var child = cur_frm.add_child(\"table_5\");\n                                    frappe.model.set_value(child.doctype, child.name, \"item\",r.message[i][\"item_code\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"item_name\",r.message[i][\"item_name\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message[i][\"barcode\"]);\n                                    frm.save();\n                                        \n                                    \n                                }\n                            \n                                \n                        });\n\t        \n\t        }\n\t    }else if(frm.doc.type === \"Delete Barcode\"){\n\t        if(frm.doc.item_group != \"\"){\n            \t        frappe.call('techstation_item_control.overrides.barcode_management.delete_item_group', {\n                                            data: frm.doc\n                                        }).then(r => {\n                                console.log(r.message);\n                                frm.doc.table_5=[];\n                                for(let i=0;i<r.message.length;i++){\n                                    var child = cur_frm.add_child(\"table_5\");\n                                    frappe.model.set_value(child.doctype, child.name, \"item\",r.message[i][\"item_code\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"item_name\",r.message[i][\"item_name\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message[i][\"barcode\"]);\n                                    frm.save();\n                                        \n                                    \n                                }\n                            \n                                \n                        });\n\t        \n\t        }\n\t    }\n                        \n\t}\n\t,\n\tupdate_all_item_group(frm){\n\t    frm.set_value(\"item_group\",\"\")\n\t    frm.set_df_property(\"item_group\",\"reqd\",0);\n\t    refresh_field(\"item_group\");\n\t    if(frm.doc.type === \"Generate Barcode\"){\n\t        frappe.call('techstation_item_control.overrides.barcode_management.get_item', {\n                                data: frm.doc\n                            }).then(r => {\n                                console.log(r.message);\n                                frm.doc.table_5=[];\n                                for(let i=0;i<r.message.length;i++){\n                                    var child = cur_frm.add_child(\"table_5\");\n                                    frappe.model.set_value(child.doctype, child.name, \"item\",r.message[i][\"item_code\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"item_name\",r.message[i][\"item_name\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message[i][\"barcode\"]);\n                                    frm.save();\n                                        \n                                    \n                                }\n                            \n                                \n                        });\n\t        \n\t        }else if(frm.doc.type === \"Delete Barcode\"){\n\t            frappe.call('techstation_item_control.overrides.barcode_management.delete_item_group', {\n                                data: frm.doc\n                            }).then(r => {\n                                console.log(r.message);\n                                frm.doc.table_5=[];\n                                for(let i=0;i<r.message.length;i++){\n                                    var child = cur_frm.add_child(\"table_5\");\n                                    frappe.model.set_value(child.doctype, child.name, \"item\",r.message[i][\"item_code\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"item_name\",r.message[i][\"item_name\"]);\n                                    frappe.model.set_value(child.doctype, child.name, \"barcode\",r.message[i][\"barcode\"]);\n                                    frm.save();\n                                        \n                                    \n                                }\n                            \n                                \n                        });\n\t        }\n\t    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Re Pricing",
  "enabled": 1,
  "modified": "2022-09-10 18:00:36.859745",
  "name": "Re Pricing-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Re Pricing', {\n\trefresh(frm) {\n\t\t    frm.set_query(\"price_list\", function() {\n                return {\n                    \"filters\": {\n                        \"selling\": 1,\n                    }\n                };\n            });\n\t},\n\tlast_incoming_rate(frm){\n\t    if(frm.doc.last_incoming_rate ==1){\n\t        frm.set_value(\"last_valuation_rate\",0)\n\t        frm.set_value(\"item_valuation_rate\",0)\n\t    }\n\t    \n\t},\n\tlast_valuation_rate(frm){\n\t     if(frm.doc.last_valuation_rate ==1){\n\t        frm.set_value(\"last_incoming_rate\",0)\n\t        frm.set_value(\"item_valuation_rate\",0)\n\t    }\n\t    \n\t},\n\titem_valuation_rate(frm){\n\t    if(frm.doc.item_valuation_rate ==1){\n\t        frm.set_value(\"last_incoming_rate\",0)\n\t        frm.set_value(\"last_valuation_rate\",0)\n\t    }\n\t},\n\tprice_increase(frm){\n\t    if(frm.doc.price_increase ===1){\n\t\t    frm.set_value(\"price_reduction\",0);\n\t\t}\n\t},\n\tprice_reduction(frm){\n\t    if(frm.doc.price_reduction ===1){\n\t\t    frm.set_value(\"price_increase\",0);\n\t\t}\n\t},\n\tupdate_all_items(frm){\n\t     if(frm.doc.update_all_items ===1){\n\t\t    frm.set_value(\"item_group\",\"\");\n\t\t    frm.set_df_property(\"item_group\",\"reqd\",0);\n\t\t}\n\t},\n\tupdate_all_price_lists(frm){\n\t     if(frm.doc.update_all_price_lists ===1){\n\t\t    frm.set_value(\"price_list\",\"\");\n\t\t}\n\t},before_save(frm){\n\t    if(frm.doc.selling ==0 && frm.doc.buying == 0){\n\t        frappe.throw(\"Please Select one of them Buying or Selling\");\n\t    }\n\t    if(frm.doc.price_increase ==0 && frm.doc.price_reduction == 0){\n\t        frappe.throw(\"Please Select one of them Price Increase or Price Reduction\");\n\t    }\n\t    if(frm.doc.percentage > 100){\n\t        frappe.throw(\"Percentage Can not greater than 100\");\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Discount Update",
  "enabled": 1,
  "modified": "2022-09-10 08:13:01.840136",
  "name": "Discount Update-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Discount Update', {\n\tupdate_all_items(frm){\n\t     if(frm.doc.update_all_items ===1){\n\t\t    frm.set_value(\"item_group\",\"\");\n\t\t    frm.set_df_property(\"item_group\",\"reqd\",0);\n\t\t}\n\t},\n\tbefore_save(frm){\n\t    if(frm.doc.max_discount >=100){\n\t        frappe.throw(\"Max Amount Can not greater than 100\");\n\t    }\n\t    if(frm.doc.adda_profit_rate >=100){\n\t        frappe.throw(\"Add a Profit Rate Can not greater than 100\");\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Profit Margin",
  "enabled": 1,
  "modified": "2022-09-10 18:03:00.208328",
  "name": "Profit Margin-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Profit Margin', {\n\tpurchase_invoice_link(frm) {\n\t    if(frm.doc.purchase_invoice_link){\n\t     frappe.model.with_doc(\"Purchase Invoice\", frm.doc.purchase_invoice_link, function(r) {\n\t\t\tvar subcategory_attribute_value = frappe.model.get_doc(\"Purchase Invoice\", frm.doc.purchase_invoice_link);\n\t\t\tif (subcategory_attribute_value.items){\n\t\t\t    frm.doc.table_16=[];\n\t\t\t    $.each(subcategory_attribute_value.items, function(index, row){\n\t\t\t\t\tvar child = cur_frm.add_child(\"table_16\");\n                    frappe.model.set_value(child.doctype, child.name, \"item_code\",row.item_code);\n                    frappe.model.set_value(child.doctype, child.name, \"item_name\",row.item_name);\n                    frappe.model.set_value(child.doctype, child.name, \"qty\",row.qty);\n                    frappe.model.set_value(child.doctype, child.name, \"rate\",row.rate);\n                    frappe.model.set_value(child.doctype, child.name, \"amount\",row.amount);\n                    refresh_field(\"table_16\");\n\t\t        });\n\t\t\t}\n\t\t});\n\t    }\n\t\n\t},\n\tpurchase_order_link(frm) {\n\t    if(frm.doc.purchase_order_link){\n\t     frappe.model.with_doc(\"Purchase Order\", frm.doc.purchase_order_link, function(r) {\n\t\t\tvar subcategory_attribute_value = frappe.model.get_doc(\"Purchase Order\", frm.doc.purchase_order_link);\n\t\t\tif (subcategory_attribute_value.items){\n\t\t\t    frm.doc.table_16=[];\n\t\t\t    $.each(subcategory_attribute_value.items, function(index, row){\n\t\t\t\t\tvar child = cur_frm.add_child(\"table_16\");\n                    frappe.model.set_value(child.doctype, child.name, \"item_code\",row.item_code);\n                    frappe.model.set_value(child.doctype, child.name, \"item_name\",row.item_name);\n                    frappe.model.set_value(child.doctype, child.name, \"qty\",row.qty);\n                    frappe.model.set_value(child.doctype, child.name, \"rate\",row.rate);\n                    frappe.model.set_value(child.doctype, child.name, \"amount\",row.amount);\n                    refresh_field(\"table_16\");\n\t\t        });\n\t\t\t}\n\t\t});\n\t    }\n\t\n\t},\n\tpurchase_order(frm){\n\t    if(frm.doc.purchase_order == 1){\n\t        frm.set_value(\"purchase_invoice\",0);\n\t        if(frm.doc.purchase_invoice_link != null){\n\t            frm.set_value(\"purchase_invoice_link\",\"\");\n\t        }\n\t        \n\t        frm.doc.table_16=[];\n\t        refresh_field(\"table_16\");\n\t    }\n\t    \n\t},\n\tpurchase_invoice(frm){\n\t     if(frm.doc.purchase_invoice == 1){\n\t        frm.set_value(\"purchase_order\",0);\n\t         if(frm.doc.purchase_order_link != \"\"){\n\t            frm.set_value(\"purchase_order_link\",\"\");\n\t        }\n\t        frm.doc.table_16=[];\n\t        refresh_field(\"table_16\");\n\t    }\n\t    \n\t},\n\tupdate_all_price_lists(frm){\n\t    refresh_field(\"price_list\");\n\t    frm.set_df_property(\"price_list\",\"reqd\",0);\n\t    frm.set_value(\"price_list\",\"\");\n\t    refresh_field(\"price_list\");\n\t    \n\t},\n\tbefore_save(frm){\n\t    if(frm.doc.percentage > 100){\n\t        frappe.throw(\"Percentage Should Not Greater than 100\")\n\t    }\n\t    if(frm.doc.max_discount > 100){\n\t        frappe.throw(\"Max Discount Should Not Greater than 100\")\n\t    }\n\t},\n\tprice_increase(frm){\n\t    if(frm.doc.price_increase == 1){\n\t        frm.set_value(\"price_reduction\",0);\n\t    }\n\t    \n\t},\n\tprice_reduction(frm){\n\t     if(frm.doc.price_reduction == 1){\n\t        frm.set_value(\"price_increase\",0);\n\t    }\n\t    \n\t},\n\tmandatory_discount(frm){\n\t    if (frm.doc.mandatory_discount == 1){\n\t        frm.set_df_property(\"max_discount\",\"reqd\",1);\n\t    }else{\n\t        frm.set_df_property(\"max_discount\",\"reqd\",0);\n\t    }\n\t},before_save(frm){\n\t    if(frm.doc.percentage == 0){\n\t        frappe.throw(\"Please Enter a Valid percentage\")\n\t    }\n\t    if(frm.doc.price_increase ==0 && frm.doc.price_reduction == 0){\n\t        frappe.throw(\"Please Select one of them Price Increase or Price Reduction\");\n\t    }\n\t    if(frm.doc.percentage > 100){\n\t        frappe.throw(\"Percentage Can not greater than 100\");\n\t    }\n\t}\n});",
  "view": "Form"
 }
]